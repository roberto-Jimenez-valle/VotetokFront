// Test r√°pido para verificar que .env est√° correcto
import fs from 'fs'

console.log('üîç Verificando archivo .env...\n')

const envContent = fs.readFileSync('.env', 'utf8')

// Buscar variables importantes
const jwtMatch = envContent.match(/^JWT_SECRET=(.+)$/m)
const appMatch = envContent.match(/^APP_SECRET=(.+)$/m)
const viteAppMatch = envContent.match(/^VITE_APP_SECRET=(.+)$/m)

console.log('üìã Variables encontradas:')
console.log(`JWT_SECRET: ${jwtMatch ? '‚úÖ ' + jwtMatch[1].substring(0, 15) + '... (' + jwtMatch[1].length + ' chars)' : '‚ùå NO ENCONTRADO'}`)
console.log(`APP_SECRET: ${appMatch ? '‚úÖ ' + appMatch[1].substring(0, 15) + '... (' + appMatch[1].length + ' chars)' : '‚ùå NO ENCONTRADO'}`)
console.log(`VITE_APP_SECRET: ${viteAppMatch ? '‚úÖ ' + viteAppMatch[1].substring(0, 15) + '... (' + viteAppMatch[1].length + ' chars)' : '‚ùå NO ENCONTRADO'}`)

// Verificar que APP_SECRET y VITE_APP_SECRET son iguales
if (appMatch && viteAppMatch) {
  if (appMatch[1] === viteAppMatch[1]) {
    console.log('\n‚úÖ APP_SECRET y VITE_APP_SECRET coinciden')
  } else {
    console.log('\n‚ùå ERROR: APP_SECRET y VITE_APP_SECRET NO coinciden!')
    console.log('   APP_SECRET:', appMatch[1].substring(0, 20) + '...')
    console.log('   VITE_APP_SECRET:', viteAppMatch[1].substring(0, 20) + '...')
  }
}

// Verificar saltos de l√≠nea
const hasLineBreaks = /SECRET=.+\n.+/m.test(envContent)
if (hasLineBreaks) {
  console.log('\n‚ö†Ô∏è  ADVERTENCIA: Detectados saltos de l√≠nea en valores de secrets')
}

console.log('\n‚úÖ Archivo .env parece correcto\n')
